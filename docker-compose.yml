version: "3.9"
services:
  nginx:
    container_name: saas_nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/:rw
      - ./.ssl/:/etc/nginx/ssl/:ro
      #- ./certbot/www:/var/www/certbot:ro
      #- ./certbot/conf/:/etc/nginx/ssl/:ro
    restart: always
    environment:
      NGINX_DOMAIN_NAME: ${NGINX_DOMAIN_NAME}
    depends_on:
      - app
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./certbot/www:/var/www/certbot:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw
  app:
    container_name: saas_app
    image: node:lts
    working_dir: /app
    command: bash -c "npm install && npm run dev"
    expose:
      - 80
    restart: always
    volumes:
      - ./app:/app
  db:
    container_name: saas_db
    image: mysql
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db-schema.sql:/docker-entrypoint-initdb.d/init-db-schema.sql
      - ./init-db-tables.sql:/docker-entrypoint-initdb.d/init-db-tables.sql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: saas
      LANG: C.UTF-8
volumes:
  db_data: { }
